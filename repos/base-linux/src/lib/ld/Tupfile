TARGET_NAME = base-linux
include_rules

ifeq (@(TUP_ARCH),x86_64)
	INCLUDES += -I$(BASE_DIR)/src/lib/ldso/spec/x86_64
endif

INCLUDES += -I$(BASE_DIR)/src/include

LDSO_DIR = $(BASE_DIR)/src/lib/ldso

ifeq (@(TUP_ARCH),x86_64)
LDSO_SPEC_DIR = $(LDSO_DIR)/spec/x86_64
endif

INCLUDES += -I$(LDSO_SPEC_DIR)
INCLUDES += -I$(LDSO_DIR)/include

DEFINES += -fPIC

: foreach $(LDSO_DIR)/*.cc |> !cxx |> {obj}
: foreach $(LDSO_SPEC_DIR)/*.s |> !asm |> {obj}

LDFLAGS += -shared --eh-frame-hdr

: $(BASE_DIR)/lib/symbols/ld \
	|> \
		echo -e '{\n\tglobal:' >> %o; \
		sed -n "s/^\(\w\+\) .*/\t\t\1;/p" %f >> %o; \
		echo -e "\tlocal: *;\n};" >> %o; \
	|> symbol.map

LDFLAGS += -Bsymbolic-functions --version-script=symbol.map

LDFLAGS += -gc-sections -z max-page-size=0x1000
LDFLAGS += -T$(REP_DIR)/src/ld/stack_area.ld
LDFLAGS += -T$(BASE_DIR)/src/ld/genode_rel.ld
LDFLAGS += --entry=_start_initial_stack

BASE_LIBS += \
	$(REP_DIR)/src/lib/base/base-linux-common.lib.a \
	$(REP_DIR)/src/lib/base/base-linux.lib.a \
	$(REP_DIR)/src/lib/syscall/syscall-linux.lib.a \

BASE_PKGS += alarm cxx ldso-startup startup timeout

LDFLAGS += `pkg-config --static --libs $(BASE_PKGS)`

: $(BASE_LIBS) {obj} | symbol.map \
|> \
	$(LD) -o %o \
	$(LD_MARCH) $(LDFLAGS) \
	--whole-archive --start-group \
	%f \
	--end-group --no-whole-archive \
	$(LIBGCC) ;\
	printf "\x02" | dd of=%o bs=1 seek=16 count=1 conv=notrunc ; \
|> ld-linux.lib.so $(REP_DIR)/<ld> {bin}

: {bin} |> !collect_bin |>
include &(BIN_RULES)
